{"version":3,"sources":["Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","setState","time","setInterval","console","log","toLocaleTimeString","prevProps","newName","props","clearTimeout","React","Component","App","isClockVisible","clockName","hideClock","showClock","randomClockName","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CACZC,KAAMC,aAAY,WAChB,EAAKF,SAAS,CAAEH,KAAM,IAAIC,OAE1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,SAXT,gCAeE,SAAmBC,GACbA,EAAUC,UAAYR,KAAKS,MAAMD,SAEnCJ,QAAQC,IAAI,wCACNE,EAAUC,QADJ,eACkBR,KAAKS,MAAMD,YAnB/C,kCAuBE,WACEE,aAAaV,KAAKH,MAAMK,QAxB5B,oBA2BE,WACE,OACE,8BAAOF,KAAKH,MAAMC,KAAKQ,0BA7B7B,GAA2BK,IAAMC,WCsDlBC,G,kNAnDbhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKf,SAAS,CAAEa,gBAAgB,K,EAGlCG,UAAY,WACV,EAAKhB,SAAS,CAAEa,gBAAgB,K,EAGlCI,gBAAkB,WAChB,EAAKjB,SAAS,CAAEc,UAAWI,KAAKC,MAAsB,GAAhBD,KAAKE,a,4CAG7C,WACE,OACE,yBAAKC,UAAU,OACb,2CACA,2CAEG,IACAtB,KAAKH,MAAMiB,gBACV,kBAAC,EAAD,CAAON,QAASR,KAAKH,MAAMkB,aAG/B,4BACEQ,KAAK,SACLC,QAASxB,KAAKgB,WAFhB,cAMA,4BACEO,KAAK,SACLC,QAASxB,KAAKiB,WAFhB,cAMA,4BACEM,KAAK,SACLC,QAASxB,KAAKkB,iBAFhB,wB,GAzCUP,IAAMC,YCDxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c6746f48.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    this.setState({\n      time: setInterval(() => {\n        this.setState({ date: new Date() });\n        // eslint-disable-next-line\n        console.log(this.state.date.toLocaleTimeString());\n      }, 1000),\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.newName !== this.props.newName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from`\n      + ` ${prevProps.newName} to ${this.props.newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.state.time);\n  }\n\n  render() {\n    return (\n      <span>{this.state.date.toLocaleTimeString()}</span>\n    );\n  }\n}\n\nClock.propTypes = {\n  newName: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  }\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  }\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  }\n\n  randomClockName = () => {\n    this.setState({ clockName: Math.floor(Math.random() * 10) });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.isClockVisible && (\n            <Clock newName={this.state.clockName} />\n          )}\n        </p>\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.randomClockName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}